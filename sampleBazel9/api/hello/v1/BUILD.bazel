# 手动补充
load("@rules_go//go:def.bzl", "go_library", "go_test")
load("@rules_go//proto:def.bzl", "go_proto_library")
load("@rules_proto//proto:defs.bzl", "proto_library")

proto_library(
    name = "api_proto",
    srcs = ["hello.proto"],
    visibility = ["//visibility:public"],
    deps = [
        "@protobuf//:empty_proto",
        "@protobuf//:timestamp_proto",
    ],
)

# 这里补上pb文件的生成，因为grpc的生成依赖pb文件
go_proto_library(
    name = "api_go_proto_pb",
    compilers = ["@rules_go//proto:go_proto"],
    importpath = "github.com/wrallen/sampleBazel9/api/hello/v1",
    proto = ":api_proto",
    visibility = ["//visibility:public"],
)

# gazelle自动生成的文件，定义了grpc的生成
go_proto_library(
    name = "api_go_proto",
    # io_bazel_rules_go -> rules_go
    compilers = ["@rules_go//proto:go_grpc_v2"],
    importpath = "github.com/wrallen/sampleBazel9/api/hello/v1",
    proto = ":api_proto",
    visibility = ["//visibility:public"],
    deps = [":api_go_proto_pb"],
)

# 手写 - 只包含 pb 文件
go_library(
    name = "hello",
    # 下面添加上pb文件相关的
    embed = [":api_go_proto_pb"],
    importpath = "github.com/wrallen/sampleBazel9/api/hello/v1",
    visibility = ["//visibility:public"],
)

# 测试
go_test(
    name = "hello_test",
    srcs = ["hello_test.go"],
    embed = [":hello"],
    importpath = "github.com/wrallen/sampleBazel9/api/hello/v1",
)
